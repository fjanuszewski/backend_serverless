openapi: 3.0.1
info:
  title: ApiGateway CRUD Template
  version: 1.0.0
servers:
- url: /
paths:
  /items/{idItem}:
    get:
      tags:
      - items
      description: Get Item Example
      operationId: getItem
      parameters:
      - name: idItem
        in: path
        description: Id item
        required: true
        schema:
          type: string
      responses:
        200:
          description: Respuesta Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaItem'
        500:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-amazon-apigateway-request-validator: Validate-Params
    put:
      tags:
      - items
      description: Update items example
      operationId: putItem
      parameters:
      - name: idItem
        in: path
        description: Id Item
        required: true
        schema:
          type: string
      requestBody:
        description: Item value
        content:
          text/html:
            schema:
              $ref: '#/components/schemas/SchemaItem'
        required: true
      responses:
        200:
          description: Respuesta Ok
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
        500:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-amazon-apigateway-request-validator: all
      x-codegen-request-body-name: description
    delete:
      tags:
      - Items
      description: Delete item from dynamoDB
      operationId: deleteItem
      parameters:
      - name: idItem
        in: path
        description: Id Item
        required: true
        schema:
          type: string
      responses:
        200:
          description: Respuesta Ok
          content: {}
        500:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - LambdaAuth: []
      x-amazon-apigateway-request-validator: Validate-Params
  /items/:
    post:
      tags:
      - items
      description: Create item example
      operationId: postItem
      parameters:
      - name: idItem
        in: query
        description: Id item
        required: true
        schema:
          type: string
      requestBody:
        description: Item value
        content:
          text/html:
            schema:
              $ref: '#/components/schemas/SchemaItem'
        required: true
      responses:
        200:
          description: Respuesta Ok
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
        500:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-amazon-apigateway-request-validator: all
      x-codegen-request-body-name: description
components:
  schemas:
    SchemaItem:
      type: object
      properties:
        idItem:
          type: string
        description:
          type: string
    Error:
      type: object
      properties:
        message:
          type: string
  securitySchemes:
    LambdaAuth:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: custom
      x-amazon-apigateway-authorizer:
        type: request
        identitySource: method.request.header.Authorization
        authorizerResultTtlInSeconds: 0
        authorizerCredentials:
          Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/${Environment}-${Project}-Role
        authorizerUri:
          Fn::Join:
          - ""
          - - Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/
            - Fn::GetAtt:
              - AuthorizerFunction
              - Arn
            - Fn::Sub: /invocations
x-amazon-apigateway-documentation:
  version: 0.1
  documentationParts:
  - location:
      type: API
    properties:
      description: Item API 1
      info:
        description: API example 1
        version: 0.1
x-amazon-apigateway-request-validators:
  Validate-Body:
    validateRequestParameters: false
    validateRequestBody: true
  Validate-Params:
    validateRequestParameters: true
    validateRequestBody: false
  all:
    validateRequestParameters: true
    validateRequestBody: true
