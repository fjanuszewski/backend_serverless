AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Document Management Security

  '
Parameters:
  UUID:
    Type: String
  Environment:
    Type: String
  Project:
    Type: String
  DeployBucket:
    Type: String
  Bucket:
    Type: String
    Default: demoandreani
Globals:
  Function:
    Runtime: nodejs12.x
    AutoPublishAlias: example
Resources:
  ItemsRestApi:
    Type: AWS::Serverless::Api
    Properties:
      Name:
        Fn::Join:
        - '-'
        - - Ref: Environment
          - demo_apigateway_api_1
      StageName:
        Ref: Environment
      Variables:
        Environment:
          Ref: Environment
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: s3://andreani/c321eaa95465a80dc166febe71ffc6cb
  ItemsRestApi2:
    Type: AWS::Serverless::Api
    Properties:
      Name:
        Fn::Join:
        - '-'
        - - Ref: Environment
          - demo_apigateway_api_2
      StageName:
        Ref: Environment
      Variables:
        Environment:
          Ref: Environment
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: s3://andreani/c7e71dd36d9a69f3fa8b72b9194a9485
  GetItem:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.handler
      Timeout: 30
      MemorySize: 512
      CodeUri: s3://andreani/f482154ecd901a69f2c3426f1dc363cc
      FunctionName:
        Fn::Sub: ${Environment}-${Project}-GetItem
      Role:
        Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/${Environment}-${Project}-Role
      Environment:
        Variables:
          ENV:
            Ref: Environment
          EXAMPLE_TABLE:
            Ref: ExampleTable
  GetItemPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt: GetItem.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ItemsRestApi}/*/GET/items/{idItem}
  GetItemPermission2:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt: GetItem.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ItemsRestApi2}/*/GET/items/{idItem}
  PutItem:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.handler
      Timeout: 30
      MemorySize: 512
      CodeUri: s3://andreani/c40eb94cd6a709a88caa5889fa7e3d5a
      FunctionName:
        Fn::Sub: ${Environment}-${Project}-PutItem
      Role:
        Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/${Environment}-${Project}-Role
      Environment:
        Variables:
          ENV:
            Ref: Environment
          EXAMPLE_TABLE:
            Ref: ExampleTable
  PutItemPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt: PutItem.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ItemsRestApi}/*/PUT/items/{idItem}
  PostItem:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.handler
      Timeout: 30
      MemorySize: 512
      CodeUri: s3://andreani/04fb9a179463239cde3fc4be6a88b6f7
      FunctionName:
        Fn::Sub: ${Environment}-${Project}-PostItem
      Role:
        Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/${Environment}-${Project}-Role
      Environment:
        Variables:
          ENV:
            Ref: Environment
          EXAMPLE_TABLE:
            Ref: ExampleTable
  PostItemPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt: PostItem.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ItemsRestApi}/*/POST/items
  DeleteItem:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.handler
      Timeout: 30
      MemorySize: 512
      CodeUri: s3://andreani/61f40b672c19775a42796a6bda8b72cf
      FunctionName:
        Fn::Sub: ${Environment}-${Project}-DeleteItem
      Role:
        Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/${Environment}-${Project}-Role
      Environment:
        Variables:
          ENV:
            Ref: Environment
          EXAMPLE_TABLE:
            Ref: ExampleTable
  DeleteItemPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt: DeleteItem.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ItemsRestApi}/*/DELETE/items/{idItem}
  FilesBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName:
        Ref: Bucket
      CorsConfiguration:
        CorsRules:
        - AllowedHeaders:
          - '*'
          AllowedMethods:
          - GET
          - PUT
          AllowedOrigins:
          - '*'
          Id: myCORSRuleId1
          MaxAge: '3600'
  FilesBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: FilesBucket
      PolicyDocument:
        Statement:
        - Action:
          - s3:GetObject*
          - s3:PutObject*
          Effect: Allow
          Resource:
            Fn::Sub: arn:aws:s3:::${Bucket}/*
          Principal:
            AWS:
              Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/${Environment}-${Project}-Role
  ExampleTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName:
        Fn::Join:
        - ''
        - - Ref: Environment
          - Example
      PrimaryKey:
        Name: idItem
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
  ApiKeysTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName:
        Fn::Join:
        - ''
        - - Ref: Environment
          - ApiKeys
      PrimaryKey:
        Name: key
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
  AuthorizerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.handler
      Timeout: 30
      MemorySize: 512
      CodeUri: s3://andreani/e236b2fe4c2c0da01b06a201cd75ff30
      FunctionName:
        Fn::Sub: ${Environment}-${Project}-Authorizer
      Role:
        Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/${Environment}-${Project}-Role
      Environment:
        Variables:
          ENV:
            Ref: Environment
          KEYS_TABLE:
            Ref: ApiKeysTable
